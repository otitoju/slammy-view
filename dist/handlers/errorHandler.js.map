{"version":3,"sources":["../../server/handlers/errorHandler.js"],"names":["exports","catchErrors","req","res","next","fn","catch","developmentErrors","err","stack","errorDetails","message","status","stackHighlighted","replace","format","json","productionErrors","error","notFound","Error"],"mappings":";;AAAAA,QAAQC,WAAR,GAAsB,cAAM;AACxB,SAAO,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC/B,WAAOC,GAAGH,GAAH,EAAQC,GAAR,EAAaC,IAAb,EAAmBE,KAAnB,CAAyBF,IAAzB,CAAP;AACD,GAFD;AAGD,CAJH;;AAMEJ,QAAQO,iBAAR,GAA4B,UAACC,GAAD,EAAMN,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AACnDI,MAAIC,KAAJ,GAAYD,IAAIC,KAAJ,IAAa,EAAzB;AACA,MAAMC,eAAe;AACnBC,aAASH,IAAIG,OADM;AAEnBC,YAAQJ,IAAII,MAFO;AAGnBC,sBAAkBL,IAAIC,KAAJ,CAAUK,OAAV,CAChB,yBADgB,EAEhB,iBAFgB;AAHC,GAArB;AAQAX,MAAIS,MAAJ,CAAWJ,IAAII,MAAJ,IAAc,GAAzB;AACAT,MAAIY,MAAJ,CAAW;AACT;AACA,iBAAa,oBAAM;AACjBZ,UAAIa,IAAJ,CAASN,YAAT;AACD,KAJQ,EAIN;AACH,wBAAoB;AAAA,aAAMP,IAAIa,IAAJ,CAASN,YAAT,CAAN;AAAA,KALX,CAKwC;AALxC,GAAX;AAOD,CAlBD;;AAoBAV,QAAQiB,gBAAR,GAA2B,UAACT,GAAD,EAAMN,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAClDD,MAAIS,MAAJ,CAAWJ,IAAII,MAAJ,IAAc,GAAzB;AACAT,MAAIa,IAAJ,CAAS;AACPL,aAASH,IAAIG,OADN;AAEPO,WAAO;AAFA,GAAT;AAID,CAND;;AAQA;;;;AAIFlB,QAAQmB,QAAR,GAAmB,UAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAMI,MAAM,IAAIY,KAAJ,CAAU,WAAV,CAAZ;AACAZ,MAAII,MAAJ,GAAa,GAAb;AACAR,OAAKI,GAAL;AACD,CAJD","file":"errorHandler.js","sourcesContent":["exports.catchErrors = fn => {\r\n    return function (req, res, next) {\r\n      return fn(req, res, next).catch(next)\r\n    }\r\n  }\r\n  \r\n  exports.developmentErrors = (err, req, res, next) => {\r\n    err.stack = err.stack || ''\r\n    const errorDetails = {\r\n      message: err.message,\r\n      status: err.status,\r\n      stackHighlighted: err.stack.replace(\r\n        /[a-z_-\\d]+.js:\\d+:\\d+/gi,\r\n        '<mark>$&</mark>'\r\n      )\r\n    }\r\n    res.status(err.status || 500)\r\n    res.format({\r\n      // Based on the `Accept` http header\r\n      'text/html': () => {\r\n        res.json(errorDetails)\r\n      }, // Form Submit, Reload the page\r\n      'application/json': () => res.json(errorDetails) // Ajax call, send JSON back\r\n    })\r\n  }\r\n  \r\n  exports.productionErrors = (err, req, res, next) => {\r\n    res.status(err.status || 500)\r\n    res.json({\r\n      message: err.message,\r\n      error: {}\r\n    })\r\n  }\r\n\r\n  /*\r\n  Not Found Error Handler\r\n  If we hit a route that is not found, we mark it as 404 and pass it along to the next error handler to display\r\n*/\r\nexports.notFound = (req, res, next) => {\r\n  const err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n};\r\n"]}