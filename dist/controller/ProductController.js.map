{"version":3,"sources":["../../server/controller/ProductController.js"],"names":["ProductController","req","res","body","productName","description","actualPrice","status","json","STATUS","STATUS_BAD_REQUEST","code","MESSAGE","response","file","undefined","path","result","cloudinary","uploader","upload","imgUrl","secure_url","data","ProductService","createProduct","image","save","STATUS_CREATED","info","error","message","STATUS_SERVER_ERROR","_req","getProducts","length","STATUS_NOTFOUND","productId","params","getProduct","deleteProduct","discountPrice","downloadLink","downloadLink1","downloadLink2","downloadLink3","STATUS_OK"],"mappings":"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","file":"ProductController.js","sourcesContent":["import ProductService from \"../services/ProductService\";\r\nimport { Tracer } from \"../utils/Logger\";\r\nimport STATUS from \"../utils/HttpResponse\";\r\nimport cloudinary from 'cloudinary';\r\n\r\nexport default class ProductController {\r\n  static async CreateProduct(req, res) {\r\n    try {\r\n      const { productName, description, actualPrice } = req.body;\r\n      if (!productName || !description || !actualPrice) {\r\n        return res.status(400).json({\r\n          STATUS: STATUS.STATUS_BAD_REQUEST.code,\r\n          MESSAGE: STATUS.STATUS_BAD_REQUEST.response,\r\n        });\r\n      } \r\n      else if (req.file == undefined || req.file == '') {\r\n        return res.status(400).json({\r\n          STATUS: STATUS.STATUS_BAD_REQUEST.code,\r\n          MESSAGE: STATUS.STATUS_BAD_REQUEST.response,\r\n        });\r\n      }\r\n      else {\r\n        var file = req.file.path\r\n        const result = await cloudinary.uploader.upload(file);\r\n        var imgUrl = result.secure_url\r\n        const data = await ProductService.createProduct(req.body);\r\n        data.image = imgUrl;\r\n        await data.save()\r\n        return res.status(201).json({\r\n          STATUS: STATUS.STATUS_CREATED.code,\r\n          MESSAGE: STATUS.STATUS_CREATED.response,\r\n          info: data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"CreateProduct\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async GetProducts(_req, res) {\r\n    try {\r\n      const data = await ProductService.getProducts();\r\n      if (data.length > 0) {\r\n        return res.status(200).json({\r\n          info: data,\r\n        });\r\n      }\r\n      else {\r\n        return res.status(404).json({\r\n            STATUS: STATUS.STATUS_NOTFOUND.code,\r\n            MESSAGE: STATUS.STATUS_NOTFOUND.response\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"GetProducts\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async GetProduct(req, res) {\r\n    try {\r\n      const { productId } = req.params;\r\n      const data = await ProductService.getProduct(productId);\r\n      if (data) {\r\n        return res.status(200).json({\r\n          info: data,\r\n        });\r\n      } else {\r\n        return res.status(404).json({\r\n          STATUS: STATUS.STATUS_NOTFOUND.code,\r\n          MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"GetProduct\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async DeleteProduct(req, res) {\r\n    try {\r\n      const { productId } = req.params;\r\n      const data = await ProductService.deleteProduct(productId);\r\n      if (data) {\r\n        return res.status(200).json({\r\n          info: data,\r\n        });\r\n      } else {\r\n        return res.status(404).json({\r\n          STATUS: STATUS.STATUS_NOTFOUND.code,\r\n          MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"DeleteProduct\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async UpdateProduct(req, res) {\r\n    try {\r\n      const { productId } = req.params;\r\n      const data = await ProductService.getProduct(productId);\r\n      if (data) {\r\n        const { productName, description, actualPrice, discountPrice, downloadLink, downloadLink1, downloadLink2, downloadLink3 } = req.body;\r\n        // var file = req.file.path\r\n        // const result = await cloudinary.uploader.upload(file);\r\n        // var imgUrl = result.secure_url;\r\n\r\n        data.productName = productName || data.productName;\r\n        data.description = description || data.description;\r\n        data.actualPrice = actualPrice || data.actualPrice;\r\n        data.discountPrice = discountPrice || data.discountPrice;\r\n        data.downloadLink = downloadLink || data.downloadLink;\r\n        data.downloadLink1 = downloadLink1 || data.downloadLink1;\r\n        data.downloadLink2 = downloadLink2 || data.downloadLink2;\r\n        data.downloadLink3 = downloadLink3 || data.downloadLink3;\r\n        //data.image = imgUrl || data.image;\r\n        \r\n        await data.save();\r\n        return res.status(200).json({\r\n            STATUS: STATUS.STATUS_OK.code,\r\n            MESSAGE: STATUS.STATUS_OK.response,\r\n        });\r\n      }\r\n      else {\r\n        return res.status(404).json({\r\n            STATUS: STATUS.STATUS_NOTFOUND.code,\r\n            MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n          });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"UpdateProduct\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async UpdateProductImage(req, res) {\r\n    try {\r\n      const { productId } = req.params;\r\n      const data = await ProductService.getProduct(productId);\r\n      if (data) {\r\n        var file = req.file.path\r\n        const result = await cloudinary.uploader.upload(file);\r\n        var imgUrl = result.secure_url;\r\n        data.image = imgUrl || data.image;\r\n        await data.save();\r\n\r\n        return res.status(200).json({\r\n            STATUS: STATUS.STATUS_OK.code,\r\n            MESSAGE: STATUS.STATUS_OK.response,\r\n        });\r\n      }\r\n      else {\r\n        return res.status(404).json({\r\n            STATUS: STATUS.STATUS_NOTFOUND.code,\r\n            MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n          });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"UpdateProductImage\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}