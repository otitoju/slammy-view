{"version":3,"sources":["../../server/controller/TransactionController.js"],"names":["TransactionController","req","res","info","Model","create","body","status","json","STATUS","STATUS_CREATED","code","MESSAGE","response","error","message","STATUS_SERVER_ERROR","data","find","sort","length","STATUS_NOTFOUND","trxId","params","findOne","_id","findOneAndRemove","Message"],"mappings":"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","file":"TransactionController.js","sourcesContent":["import Model from \"../model/Transaction\";\r\nimport { Tracer } from \"../utils/Logger\";\r\nimport STATUS from \"../utils/HttpResponse\";\r\n\r\nexport default class TransactionController {\r\n  static async NewTransaction(req, res) {\r\n    try {\r\n      const info = await Model.create(req.body);\r\n      return res.status(201).json({\r\n        STATUS: STATUS.STATUS_CREATED.code,\r\n        MESSAGE: STATUS.STATUS_CREATED.response,\r\n        info: info,\r\n      });\r\n    } catch (error) {\r\n      Tracer(\"Transaction\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async Transactions(req, res) {\r\n    try {\r\n      const data = await Model.find({}).sort({ \"_id\": -1 });\r\n      if (data.length > 0) {\r\n        return res.status(200).json({\r\n          info: data,\r\n        });\r\n      } else {\r\n        return res.status(404).json({\r\n          STATUS: STATUS.STATUS_NOTFOUND.code,\r\n          MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"Transaction\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async GetTransaction(req, res) {\r\n    try {\r\n      const { trxId } = req.params;\r\n      const data = await Model.findOne({ _id: trxId });\r\n      if (data) {\r\n        return res.status(200).json({\r\n          info: data,\r\n        });\r\n      } else {\r\n        return res.status(404).json({\r\n          STATUS: STATUS.STATUS_NOTFOUND.code,\r\n          MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"GetTransaction\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async DeleteTransaction(req, res) {\r\n    try {\r\n      const { trxId } = req.params;\r\n      const data = await Model.findOneAndRemove({ _id: trxId });\r\n      if (data) {\r\n        return res.status(200).json({\r\n          Message: \"DELETED\"\r\n        });\r\n      } else {\r\n        return res.status(404).json({\r\n          STATUS: STATUS.STATUS_NOTFOUND.code,\r\n          MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"GetTransaction\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}