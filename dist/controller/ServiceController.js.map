{"version":3,"sources":["../../server/controller/ServiceController.js"],"names":["ServiceController","req","res","body","title","content","price","currency","status","json","STATUS","STATUS_BAD_REQUEST","code","MESSAGE","response","file","undefined","path","result","cloudinary","uploader","upload","imgUrl","secure_url","data","Service","createService","image","save","STATUS_CREATED","info","error","console","log","message","STATUS_SERVER_ERROR","_req","getServices","length","STATUS_NOTFOUND","serviceId","params","getService","deleteService","STATUS_OK"],"mappings":"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","file":"ServiceController.js","sourcesContent":["import Service from \"../services/Service\";\r\nimport { Tracer } from \"../utils/Logger\";\r\nimport STATUS from \"../utils/HttpResponse\";\r\nimport cloudinary from 'cloudinary';\r\n\r\nexport default class ServiceController {\r\n\r\n  static async CreateService(req, res) {\r\n    try {\r\n      const { title, content, price, currency } = req.body;\r\n      if (!title || !content || !price || !currency) {\r\n        return res.status(400).json({\r\n          STATUS: STATUS.STATUS_BAD_REQUEST.code,\r\n          MESSAGE: STATUS.STATUS_BAD_REQUEST.response,\r\n        });\r\n      } \r\n      else if (req.file == undefined || req.file == '') {\r\n        return res.status(400).json({\r\n          STATUS: STATUS.STATUS_BAD_REQUEST.code,\r\n          MESSAGE: STATUS.STATUS_BAD_REQUEST.response,\r\n        });\r\n      }\r\n      else {\r\n        var file = req.file.path\r\n        const result = await cloudinary.uploader.upload(file);\r\n        var imgUrl = result.secure_url\r\n        const data = await Service.createService(req.body);\r\n        data.image = imgUrl;\r\n        await data.save()\r\n        return res.status(201).json({\r\n          STATUS: STATUS.STATUS_CREATED.code,\r\n          MESSAGE: STATUS.STATUS_CREATED.response,\r\n          info: data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      Tracer(\"CreateService\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async GetServices(_req, res) {\r\n    try {\r\n      const data = await Service.getServices();\r\n      if (data.length > 0) {\r\n        return res.status(200).json({\r\n          info: data,\r\n        });\r\n      }\r\n      else {\r\n        return res.status(404).json({\r\n            STATUS: STATUS.STATUS_NOTFOUND.code,\r\n            MESSAGE: STATUS.STATUS_NOTFOUND.response\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"GetService\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async GetService(req, res) {\r\n    try {\r\n      const { serviceId } = req.params;\r\n      const data = await Service.getService(serviceId);\r\n      if (data) {\r\n        return res.status(200).json({\r\n          info: data,\r\n        });\r\n      } else {\r\n        return res.status(404).json({\r\n          STATUS: STATUS.STATUS_NOTFOUND.code,\r\n          MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"GetService\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async DeleteService(req, res) {\r\n    try {\r\n      const { serviceId } = req.params;\r\n      const data = await Service.deleteService(serviceId);\r\n      if (data) {\r\n        return res.status(200).json({\r\n          info: data,\r\n        });\r\n      } else {\r\n        return res.status(404).json({\r\n          STATUS: STATUS.STATUS_NOTFOUND.code,\r\n          MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"DeleteService\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async UpdateService(req, res) {\r\n    try {\r\n      const { serviceId } = req.params;\r\n      const data = await Service.getService(serviceId);\r\n      if (data) {\r\n        const { title, content, price,  } = req.body;\r\n        \r\n        data.title = title || data.title;\r\n        data.content = content || data.content;\r\n        data.price = price || data.price;\r\n\r\n        await data.save();  \r\n        return res.status(200).json({\r\n            STATUS: STATUS.STATUS_OK.code,\r\n            MESSAGE: STATUS.STATUS_OK.response,\r\n        });\r\n      }\r\n      else {\r\n        return res.status(404).json({\r\n            STATUS: STATUS.STATUS_NOTFOUND.code,\r\n            MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n          });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"UpdateService\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async UpdateServiceImage(req, res) {\r\n    try {\r\n      const { serviceId } = req.params;\r\n      const data = await Service.getService(serviceId);\r\n      if (data) {\r\n        var file = req.file.path\r\n        const result = await cloudinary.uploader.upload(file);\r\n        var imgUrl = result.secure_url;\r\n        data.image = imgUrl || data.image;\r\n\r\n        await data.save();  \r\n        return res.status(200).json({\r\n            STATUS: STATUS.STATUS_OK.code,\r\n            MESSAGE: STATUS.STATUS_OK.response,\r\n        });\r\n      }\r\n      else {\r\n        return res.status(404).json({\r\n            STATUS: STATUS.STATUS_NOTFOUND.code,\r\n            MESSAGE: STATUS.STATUS_NOTFOUND.response,\r\n          });\r\n      }\r\n    } catch (error) {\r\n      Tracer(\"UpdateServiceImage\", error.message, error);\r\n      return res.status(500).json({\r\n        STATUS: STATUS.STATUS_SERVER_ERROR.code,\r\n        MESSAGE: STATUS.STATUS_SERVER_ERROR.response,\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}