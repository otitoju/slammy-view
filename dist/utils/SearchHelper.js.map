{"version":3,"sources":["../../server/utils/SearchHelper.js"],"names":["ProductModel","require","GetSearchQuery","body","orAnd","toLowerCase","params","query","forEach","item","k","dynmObj","columnName","toString","columnValue","push","$or","$and","a","b","json","search","pageNo","pageSize","skip","searchResult","find","limit","error","Error","message","countSearch","countDocuments","module","exports"],"mappings":";;;;AAAA,IAAMA,eAAeC,QAAQ,mBAAR,CAArB;;AAEA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC7B,QAAMC,QAAQD,KAAKC,KAAL,CAAWC,WAAX,EAAd;AACA,QAAMC,SAAS,EAAf;AACA,QAAIC,QAAQ,EAAZ;AACAJ,SAAKG,MAAL,CAAYE,OAAZ,CAAoB,UAACC,IAAD,EAAU;AAC1B,YAAMC,IAAIC,QAAQF,KAAKG,UAAL,CAAgBC,QAAhB,EAAR,EAAoCJ,KAAKK,WAAzC,CAAV;AACAR,eAAOS,IAAP,CAAYL,CAAZ;AACH,KAHD;;AAKA,QAAGN,UAAU,IAAb,EAAmB;AACfG,gBAAQ,EAAES,KAAKV,MAAP,EAAR;AACH,KAFD,MAGK;AACDC,gBAAQ,EAAEU,MAAMX,MAAR,EAAR;AACH;AACD,WAAOC,KAAP;AACH,CAhBD;;AAkBA,IAAMI,UAAU,SAAVA,OAAU,CAACO,CAAD,EAAIC,CAAJ,EAAU;AACtB,QAAIC,2BACCF,CADD,EACK,EAAE,UAAUC,CAAZ,EAAe,YAAY,GAA3B,EADL,CAAJ;;AAIA,WAAOC,IAAP;AACH,CAND;;AAQA,IAAMC,SAAS,eAATA,MAAS,CAAOlB,IAAP,EAAamB,MAAb,EAAqBC,QAArB,EAAkC;AAC7C,QAAI;AACA,YAAMC,OAAOF,SAASC,QAAtB;AACA,YAAMhB,QAAQL,eAAeC,IAAf,CAAd;AACA,YAAMsB,eAAe,MAAMzB,aAAa0B,IAAb,CAAkBnB,KAAlB,EAAyBiB,IAAzB,CAA8BA,IAA9B,EAAoCG,KAApC,CAA0CJ,QAA1C,CAA3B;AACA,eAAOE,YAAP;AACH,KALD,CAKE,OAAOG,KAAP,EAAc;AACZ,cAAM,IAAIC,KAAJ,CAAUD,MAAME,OAAhB,CAAN;AACH;AACJ,CATD;;AAWA,IAAMC,cAAc,eAAdA,WAAc,CAAO5B,IAAP,EAAgB;AAChC,QAAI;AACA,YAAMI,QAAQL,eAAeC,IAAf,CAAd;AACA,eAAO,MAAMH,aAAagC,cAAb,CAA4BzB,KAA5B,CAAb;AACH,KAHD,CAGE,OAAOqB,KAAP,EAAc;AACZ,cAAM,IAAIC,KAAJ,CAAUD,MAAME,OAAhB,CAAN;AACH;AACJ,CAPD;;AASAG,OAAOC,OAAP,GAAiB;AACbvB,oBADa;AAEbT,kCAFa;AAGbmB,kBAHa;AAIbU;AAJa,CAAjB","file":"SearchHelper.js","sourcesContent":["const ProductModel = require('../models/Product');\r\n\r\nconst GetSearchQuery = (body) => {\r\n    const orAnd = body.orAnd.toLowerCase();\r\n    const params = [];\r\n    let query = {}\r\n    body.params.forEach((item) => {\r\n        const k = dynmObj(item.columnName.toString(), item.columnValue);\r\n        params.push(k);\r\n    });\r\n\r\n    if(orAnd === 'or') {\r\n        query = { $or: params }\r\n    }\r\n    else {\r\n        query = { $and: params }\r\n    }\r\n    return query;\r\n}\r\n\r\nconst dynmObj = (a, b) => {\r\n    var json = {\r\n        [a]: { '$regex': b, '$options': 'i'}\r\n    }\r\n\r\n    return json;\r\n}\r\n\r\nconst search = async (body, pageNo, pageSize) => {\r\n    try {\r\n        const skip = pageNo * pageSize;\r\n        const query = GetSearchQuery(body);\r\n        const searchResult = await ProductModel.find(query).skip(skip).limit(pageSize);\r\n        return searchResult;\r\n    } catch (error) {\r\n        throw new Error(error.message);\r\n    }\r\n}\r\n\r\nconst countSearch = async (body) => {\r\n    try {\r\n        const query = GetSearchQuery(body);\r\n        return await ProductModel.countDocuments(query);\r\n    } catch (error) {\r\n        throw new Error(error.message);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    dynmObj,\r\n    GetSearchQuery,\r\n    search,\r\n    countSearch\r\n}\r\n"]}