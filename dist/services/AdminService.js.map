{"version":3,"sources":["../../server/services/AdminService.js"],"names":["AdminService","Model","find","sort","error","message","adminId","findOne","_id","email","findByIdAndRemove","payload","create"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;IAEqBA,Y;;;;;;;0CACQ;AACrB,gBAAI;AACD,uBAAO,MAAMC,gBAAMC,IAAN,CAAW,EAAX,EAAeC,IAAf,CAAoB,EAAC,QAAQ,CAAC,CAAV,EAApB,CAAb;AACF,aAFD,CAEE,OAAOC,KAAP,EAAc;AACZ,oCAAO,YAAP,EAAqBA,MAAMC,OAA3B,EAAoCD,KAApC;AACH;AACJ;;;uCAEqBE,O,EAAS;AAC3B,gBAAI;AACA,uBAAO,MAAML,gBAAMM,OAAN,CAAc,EAAEC,KAAKF,OAAP,EAAd,CAAb;AACH,aAFD,CAEE,OAAOF,KAAP,EAAc;AACZ,oCAAO,WAAP,EAAoBA,MAAMC,OAA1B,EAAmCD,KAAnC;AACH;AACJ;;;4CAE0BK,K,EAAO;AAC9B,gBAAI;AACA,uBAAO,MAAMR,gBAAMM,OAAN,CAAc,EAAEE,OAAOA,KAAT,EAAd,CAAb;AACH,aAFD,CAEE,OAAOL,KAAP,EAAc;AACZ,oCAAO,iBAAP,EAA0BA,MAAMC,OAAhC,EAAyCD,KAAzC;AACH;AACJ;;;0CAEwBE,O,EAAS;AAC9B,gBAAI;AACA,uBAAO,MAAML,gBAAMS,iBAAN,CAAwB,EAAEF,KAAKF,OAAP,EAAxB,CAAb;AACH,aAFD,CAEE,OAAOF,KAAP,EAAc;AACZ,oCAAO,cAAP,EAAuBA,MAAMC,OAA7B,EAAsCD,KAAtC;AACH;AACJ;;;0CAEwBO,O,EAAS;AAC9B,gBAAI;AACA,uBAAO,MAAMV,gBAAMW,MAAN,CAAaD,OAAb,CAAb;AACH,aAFD,CAEE,OAAOP,KAAP,EAAc;AACZ,oCAAO,cAAP,EAAuBA,MAAMC,OAA7B,EAAsCD,KAAtC;AACH;AACJ;;;;;;kBAvCgBJ,Y","file":"AdminService.js","sourcesContent":["import { Tracer } from \"../utils/Logger\";\r\nimport Model from \"../model/Admin\";\r\n\r\nexport default class AdminService {\r\n    static async getAdmins() {\r\n        try {\r\n           return await Model.find({}).sort({\" _id\": -1 });\r\n        } catch (error) {\r\n            Tracer(\"Get Admins\", error.message, error);\r\n        }\r\n    }\r\n\r\n    static async getAdmin(adminId) {\r\n        try {\r\n            return await Model.findOne({ _id: adminId });\r\n        } catch (error) {\r\n            Tracer(\"Get Admin\", error.message, error);\r\n        }\r\n    }\r\n\r\n    static async getAdminEmail(email) {\r\n        try {\r\n            return await Model.findOne({ email: email });\r\n        } catch (error) {\r\n            Tracer(\"Get Admin Email\", error.message, error);\r\n        }\r\n    }\r\n\r\n    static async deleteAdmin(adminId) {\r\n        try {\r\n            return await Model.findByIdAndRemove({ _id: adminId });\r\n        } catch (error) {\r\n            Tracer(\"Delete Admin\", error.message, error);\r\n        }\r\n    }\r\n\r\n    static async createAdmin(payload) {\r\n        try {\r\n            return await Model.create(payload);\r\n        } catch (error) {\r\n            Tracer(\"Create Admin\", error.message, error);\r\n        }\r\n    }\r\n}"]}